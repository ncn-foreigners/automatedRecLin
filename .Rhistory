setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(as.list(1:K), function(x) {
variable <- variables[x]
return(comparators[[x]](A_values[[variable]], B_values[[variable]]))
})
gamma[, (gamma_names) := gamma_list]
structure(
list(
gamma = gamma,
variables = variables,
comparators = comparators
)
)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(abs_distance(), abs_distance()))
test$gamma
test$gamma
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
temp_K <- length(comparators)
K <- length(variables)
if (temp_K < K) {
comparators[(temp_K + 1):K] <- reclin2::cmp_identical()
}
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(as.list(1:K), function(x) {
variable <- variables[x]
return(comparators[[x]](A_values[[variable]], B_values[[variable]]))
})
gamma[, (gamma_names) := gamma_list]
structure(
list(
gamma = data.table(gamma),
variables = variables,
comparators = comparators
)
)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(abs_distance(), abs_distance()))
test
test$gamma
test$gamma
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
temp_K <- length(comparators)
K <- length(variables)
if (temp_K < K) {
comparators[(temp_K + 1):K] <- reclin2::cmp_identical()
}
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(as.list(1:K), function(x) {
variable <- variables[x]
return(comparators[[x]](A_values[[variable]], B_values[[variable]]))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(abs_distance(), abs_distance()))
test
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(reclin2::cmp_identical(), abs_distance()))
test
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
temp_K <- length(comparators)
K <- length(variables)
if (temp_K < K) {
comparators[(temp_K + 1):K] <- reclin2::cmp_identical()
}
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(as.list(1:K), function(x) {
variable <- variables[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(reclin2::cmp_identical(), abs_distance()))
test
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
missing_variables <- variables[!(variables %in% names(comparators))]
comparators[missing_variables] <- reclin2::cmp_identical()
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(reclin2::cmp_identical(), abs_distance()))
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
missing_variables <- variables[!(variables %in% names(comparators))]
comparators[[missing_variables]] <- reclin2::cmp_identical()
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(reclin2::cmp_identical(), abs_distance()))
test
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
missing_variables <- variables[!(variables %in% names(comparators))]
comparators[missing_variables] <- reclin2::cmp_identical()
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
return(missing_variables)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list(reclin2::cmp_identical(), abs_distance()))
test
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("jeden" = reclin2::cmp_identical(), "dwa" = abs_distance()))
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("jeden" = reclin2::cmp_identical(), "dwa" = abs_distance()))
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
# missing_variables <- variables[!(variables %in% names(comparators))]
# comparators[missing_variables] <- reclin2::cmp_identical()
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
return(missing_variables)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("jeden" = reclin2::cmp_identical(), "dwa" = abs_distance()))
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
K <- length(variables)
# missing_variables <- variables[!(variables %in% names(comparators))]
# comparators[missing_variables] <- reclin2::cmp_identical()
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
return(missing_variables)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("jeden" = reclin2::cmp_identical(), "dwa" = abs_distance()))
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
K <- length(variables)
# missing_variables <- variables[!(variables %in% names(comparators))]
# comparators[missing_variables] <- reclin2::cmp_identical()
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("jeden" = reclin2::cmp_identical(), "dwa" = abs_distance()))
test
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("dwa" = reclin2::cmp_identical(), "jeden" = abs_distance()))
test
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("dwa" = reclin2::cmp_identical(), "trzy" = abs_distance()))
test
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
K <- length(variables)
missing_variables <- variables[!(variables %in% names(comparators))]
comparators[missing_variables] <- rep(reclin2::cmp_identical(), length(missing_variables))
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("dwa" = reclin2::cmp_identical(), "jeden" = abs_distance()))
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
K <- length(variables)
missing_variables <- variables[!(variables %in% names(comparators))]
comparators[missing_variables] <- rep(list(reclin2::cmp_identical()), length(missing_variables))
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("dwa" = reclin2::cmp_identical(), "jeden" = abs_distance()))
test
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = 13:15, dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"), comparators = list("jeden" = abs_distance()))
test
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"))
test
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = c(1,2,4), dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"))
test
#' @import data.table
#' @importFrom reclin2 cmp_identical
#'
#' @title Create comparison vectors
#'
#' @export
comparison_vectors <- function(
A,
B,
variables,
comparators = NULL) {
stopifnot("Not all variables are present in A." = all(variables %in% names(A)))
stopifnot("Not all variables are present in B." = all(variables %in% names(B)))
K <- length(variables)
missing_variables <- variables[!(variables %in% names(comparators))]
comparators[missing_variables] <- rep(list(reclin2::cmp_identical()), length(missing_variables))
A <- A[, ..variables]
B <- B[, ..variables]
A[, a := .I]
B[, b := .I]
gamma <- data.table::CJ(a = A$a, b = B$b)
setkey(gamma, NULL)
A_values <- A[gamma$a, ]
B_values <- B[gamma$b, ]
A_values[, a := NULL]
B_values[, b := NULL]
gamma_names <- paste0("gamma_", 1:K)
gamma_list <- lapply(1:K, function(x) {
variable <- names(comparators)[x]
return(as.numeric(comparators[[x]](A_values[[variable]], B_values[[variable]])))
})
gamma[, (gamma_names) := gamma_list]
data.table(gamma)
}
test_A <- data.table(jeden = 1:3, dwa = 4:6, trzy = 1:3)
test_B <- data.table(jeden = c(1,2,4), dwa = 10:12)
test <- comparison_vectors(test_A, test_B, variables = c("jeden", "dwa"))
test

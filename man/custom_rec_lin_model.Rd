% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/supervised_learning.R
\name{custom_rec_lin_model}
\alias{custom_rec_lin_model}
\title{Create a Custom Record Linkage Model}
\usage{
custom_rec_lin_model(ml_model, vectors)
}
\arguments{
\item{ml_model}{A trained ML model that predicts the probability of a match based on comparison vectors.}

\item{vectors}{An object of class \code{comparison_vectors} (a result of the \code{comparison_vectors} function), used for training the \code{ml_model}.}
}
\value{
Returns a list containing:\cr
\itemize{
\item{\code{binary_variables} -- here \code{NULL},}
\item{\code{continuous_parametric_variables} -- here \code{NULL},}
\item{\code{continuous_nonparametric_variables} -- here \code{NULL},}
\item{\code{binary_params} -- here \code{NULL},}
\item{\code{continuous_parametric_params} -- here \code{NULL},}
\item{\code{ratio_kliep} -- here \code{NULL},}
\item{\code{ml_model} -- ML model used for creating the record linkage model,}
\item{\code{pi_est} -- a prior probability of matching,}
\item{\code{variables} -- a character vector of key variables used for comparison,}
\item{\code{comparators} -- a list of functions used to compare pairs of records,}
\item{\code{methods} -- here \code{NULL}.}
}
}
\description{
Creates a supervised record linkage model using a custom machine learning (ML) classifier.
}
\examples{
if (requireNamespace("xgboost", quietly = TRUE)) {
  df_1 <- data.frame(
    "name" = c("John", "Emily", "Mark", "Anna", "David"),
    "surname" = c("Smith", "Johnson", "Taylor", "Williams", "Brown")
  )
  df_2 <- data.frame(
    "name" = c("Jon", "Emely", "Marc", "Michael"),
    "surname" = c("Smitth", "Jonson", "Tailor", "Henderson")
  )
  comparators <- list("name" = reclin2::cmp_jarowinkler(),
                      "surname" = reclin2::cmp_jarowinkler())
  matches <- data.frame("a" = 1:3, "b" = 1:3)
  vectors <- comparison_vectors(A = df_1, B = df_2, variables = c("name", "surname"),
                               comparators = comparators, matches = matches)
  train_data <- xgboost::xgb.DMatrix(
    data = as.matrix(vectors$Omega[, c("gamma_name", "gamma_surname")]),
    label = vectors$Omega$match
  )
  params <- list(objective = "binary:logistic",
                 eval_metric = "logloss")
  model_xgb <- xgboost::xgboost(data = train_data, params = params,
                                nrounds = 50, verbose = 0)
  custom_xgb_model <- custom_rec_lin_model(model_xgb, vectors)
  custom_xgb_model
}
}
\author{
Adam Struzik
}
